// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/hyperledger/fabric-sdk-go/api/txnapi (interfaces: TxnProposalProcessor)

package mock_txnapi

import (
	gomock "github.com/golang/mock/gomock"
	txnapi "github.com/hyperledger/fabric-sdk-go/api/txnapi"
)

// MockTxnProposalProcessor is a mock of TxnProposalProcessor interface
type MockTxnProposalProcessor struct {
	ctrl     *gomock.Controller
	recorder *MockTxnProposalProcessorMockRecorder
}

// MockTxnProposalProcessorMockRecorder is the mock recorder for MockTxnProposalProcessor
type MockTxnProposalProcessorMockRecorder struct {
	mock *MockTxnProposalProcessor
}

// NewMockTxnProposalProcessor creates a new mock instance
func NewMockTxnProposalProcessor(ctrl *gomock.Controller) *MockTxnProposalProcessor {
	mock := &MockTxnProposalProcessor{ctrl: ctrl}
	mock.recorder = &MockTxnProposalProcessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockTxnProposalProcessor) EXPECT() *MockTxnProposalProcessorMockRecorder {
	return _m.recorder
}

// ProcessTransactionProposal mocks base method
func (_m *MockTxnProposalProcessor) ProcessTransactionProposal(_param0 txnapi.TransactionProposal) (txnapi.TransactionProposalResult, error) {
	ret := _m.ctrl.Call(_m, "ProcessTransactionProposal", _param0)
	ret0, _ := ret[0].(txnapi.TransactionProposalResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ProcessTransactionProposal indicates an expected call of ProcessTransactionProposal
func (_mr *MockTxnProposalProcessorMockRecorder) ProcessTransactionProposal(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ProcessTransactionProposal", arg0)
}
