/*
Notice: This file has been modified for Hyperledger Fabric SDK Go usage.
Please review third_party pinning scripts and patches for more details.
*/
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msp/identities.proto

/*
Package msp is a generated protocol buffer package.

It is generated from these files:
	msp/identities.proto
	msp/msp_config.proto
	msp/msp_principal.proto

It has these top-level messages:
	SerializedIdentity
	SerializedIdemixIdentity
	MSPConfig
	FabricMSPConfig
	FabricCryptoConfig
	IdemixMSPConfig
	IdemixMSPSignerConfig
	SigningIdentityInfo
	KeyInfo
	FabricOUIdentifier
	MSPPrincipal
	OrganizationUnit
	MSPRole
*/
package msp

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// This struct represents an Identity
// (with its MSP identifier) to be used
// to serialize it and deserialize it
type SerializedIdentity struct {
	// The identifier of the associated membership service provider
	Mspid string `protobuf:"bytes,1,opt,name=mspid" json:"mspid,omitempty"`
	// the Identity, serialized according to the rules of its MPS
	IdBytes []byte `protobuf:"bytes,2,opt,name=id_bytes,json=idBytes,proto3" json:"id_bytes,omitempty"`
}

func (m *SerializedIdentity) Reset()                    { *m = SerializedIdentity{} }
func (m *SerializedIdentity) String() string            { return proto.CompactTextString(m) }
func (*SerializedIdentity) ProtoMessage()               {}
func (*SerializedIdentity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SerializedIdentity) GetMspid() string {
	if m != nil {
		return m.Mspid
	}
	return ""
}

func (m *SerializedIdentity) GetIdBytes() []byte {
	if m != nil {
		return m.IdBytes
	}
	return nil
}

// This struct represents an Idemix Identity
// to be used to serialize it and deserialize it.
// The IdemixMSP will first serialize an idemix identity to bytes using
// this proto, and then uses these bytes as id_bytes in SerializedIdentity
type SerializedIdemixIdentity struct {
	// NymX is the X-component of the pseudonym elliptic curve point.
	// It is a []byte representation of an amcl.BIG
	// The pseudonym can be seen as a public key of the identity, it is used to verify signatures.
	NymX []byte `protobuf:"bytes,1,opt,name=NymX,proto3" json:"NymX,omitempty"`
	// NymX is the Y-component of the pseudonym elliptic curve point.
	// It is a []byte representation of an amcl.BIG
	// The pseudonym can be seen as a public key of the identity, it is used to verify signatures.
	NymY []byte `protobuf:"bytes,2,opt,name=NymY,proto3" json:"NymY,omitempty"`
	// OU contains the organizational unit of the idemix identity
	OU []byte `protobuf:"bytes,3,opt,name=OU,proto3" json:"OU,omitempty"`
	// Role contains the role of this identity (e.g., ADMIN or MEMBER)
	Role []byte `protobuf:"bytes,4,opt,name=Role,proto3" json:"Role,omitempty"`
}

func (m *SerializedIdemixIdentity) Reset()                    { *m = SerializedIdemixIdentity{} }
func (m *SerializedIdemixIdentity) String() string            { return proto.CompactTextString(m) }
func (*SerializedIdemixIdentity) ProtoMessage()               {}
func (*SerializedIdemixIdentity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SerializedIdemixIdentity) GetNymX() []byte {
	if m != nil {
		return m.NymX
	}
	return nil
}

func (m *SerializedIdemixIdentity) GetNymY() []byte {
	if m != nil {
		return m.NymY
	}
	return nil
}

func (m *SerializedIdemixIdentity) GetOU() []byte {
	if m != nil {
		return m.OU
	}
	return nil
}

func (m *SerializedIdemixIdentity) GetRole() []byte {
	if m != nil {
		return m.Role
	}
	return nil
}

func init() {
	proto.RegisterType((*SerializedIdentity)(nil), "msp.SerializedIdentity")
	proto.RegisterType((*SerializedIdemixIdentity)(nil), "msp.SerializedIdemixIdentity")
}

func init() { proto.RegisterFile("msp/identities.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 223 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0x4f, 0x4b, 0x03, 0x31,
	0x10, 0x47, 0xd9, 0x6d, 0xfd, 0x17, 0x8a, 0x87, 0xd0, 0x43, 0xbc, 0xd5, 0x9e, 0xf6, 0x94, 0x1c,
	0xfc, 0x06, 0x05, 0x0f, 0x1e, 0xb4, 0xb0, 0x52, 0x50, 0x2f, 0xd2, 0x6d, 0xa6, 0xdb, 0x81, 0x1d,
	0x13, 0x32, 0x11, 0x8c, 0x9f, 0x5e, 0x36, 0x59, 0x44, 0x6f, 0x6f, 0x7e, 0x3c, 0x1e, 0x8c, 0x58,
	0x12, 0x7b, 0x83, 0x16, 0x3e, 0x22, 0x46, 0x04, 0xd6, 0x3e, 0xb8, 0xe8, 0xe4, 0x8c, 0xd8, 0xaf,
	0xef, 0x85, 0x7c, 0x86, 0x80, 0xfb, 0x01, 0xbf, 0xc1, 0x3e, 0x14, 0x25, 0xc9, 0xa5, 0x38, 0x23,
	0xf6, 0x68, 0x55, 0xb5, 0xaa, 0x9a, 0xab, 0xb6, 0x1c, 0xf2, 0x46, 0x5c, 0xa2, 0x7d, 0xef, 0x52,
	0x04, 0x56, 0xf5, 0xaa, 0x6a, 0x16, 0xed, 0x05, 0xda, 0xcd, 0x78, 0xae, 0x8f, 0x42, 0xfd, 0xcb,
	0x10, 0x7e, 0xfd, 0xc6, 0xa4, 0x98, 0x3f, 0x25, 0x7a, 0xc9, 0xad, 0x45, 0x9b, 0x79, 0xda, 0x5e,
	0xa7, 0x4c, 0x66, 0x79, 0x2d, 0xea, 0xed, 0x4e, 0xcd, 0xf2, 0x52, 0x6f, 0x77, 0xa3, 0xd3, 0xba,
	0x01, 0xd4, 0xbc, 0x38, 0x23, 0x6f, 0x1e, 0xc5, 0xad, 0x0b, 0xbd, 0x3e, 0x25, 0x0f, 0x61, 0x00,
	0xdb, 0x43, 0xd0, 0xc7, 0x7d, 0x17, 0xf0, 0x50, 0x7e, 0x62, 0x4d, 0xec, 0xdf, 0x9a, 0x1e, 0xe3,
	0xe9, 0xb3, 0xd3, 0x07, 0x47, 0xe6, 0x8f, 0x69, 0x8a, 0x69, 0x8a, 0x69, 0x88, 0x7d, 0x77, 0x9e,
	0xf9, 0xee, 0x27, 0x00, 0x00, 0xff, 0xff, 0x4e, 0x90, 0x2e, 0x02, 0x21, 0x01, 0x00, 0x00,
}
